- name: Pick kubectl or 'k3s kubectl'
  shell: command -v kubectl >/dev/null 2>&1 && echo kubectl || echo 'k3s kubectl'
  args:
    executable: /bin/bash
  register: kubectl_cmd
  changed_when: false
- name: Find Jenkins pod and namespace
  shell: '{{ kubectl_cmd.stdout }} get pods -A -l app=jenkins -o jsonpath=''{.items[0].metadata.namespace}
    {.items[0].metadata.name}''

    '
  args:
    executable: /bin/bash
  register: pod_info
  changed_when: false
  failed_when: pod_info.stdout | trim == ""
- name: Set facts
  set_fact:
    jns: '{{ (pod_info.stdout | trim).split('' '')[0] }}'
    jpod: '{{ (pod_info.stdout | trim).split('' '')[1] }}'
- name: Fetch crumb JSON
  shell: '{{ kubectl_cmd.stdout }} -n "{{ jns }}" exec -i "{{ jpod }}" -- bash -lc
    ''curl -sS -u {{ JENKINS_ADMIN_USER }}:{{ JENKINS_ADMIN_PASS }} "http://localhost:{{
    JENKINS_API_PORT }}/crumbIssuer/api/json"''

    '
  args:
    executable: /bin/bash
  register: crumb_json
  changed_when: false
  failed_when: crumb_json.rc != 0 or (crumb_json.stdout | trim) == ""
- name: Parse crumb JSON
  set_fact:
    _crumb_obj: '{{ crumb_json.stdout | from_json }}'
- name: Build crumb header
  set_fact:
    crumb_header: '{{ _crumb_obj.crumbRequestField ~ '': '' ~ _crumb_obj.crumb }}'
- name: Trigger safe restart via REST (single line)
  shell: '{{ kubectl_cmd.stdout }} -n "{{ jns }}" exec -i "{{ jpod }}" -- bash -lc
    ''curl -sS -u {{ JENKINS_ADMIN_USER }}:{{ JENKINS_ADMIN_PASS }} -H "{{ crumb_header
    }}" -X POST "http://localhost:{{ JENKINS_API_PORT }}/safeRestart"''

    '
  args:
    executable: /bin/bash
  register: restart_post
  changed_when: true
- name: Wait for Jenkins pod to become Ready again
  shell: '{{ kubectl_cmd.stdout }} -n "{{ jns }}" wait --for=condition=Ready pod -l
    app=jenkins --timeout=180s

    '
  args:
    executable: /bin/bash
  register: wait_out
  changed_when: false
  failed_when: '''condition met'' not in wait_out.stdout'
- name: Summary
  debug:
    msg:
    - 'Namespace: {{ jns }}'
    - 'Pod: {{ jpod }}'
    - 'Crumb header used: {{ crumb_header }}'
    - 'Wait output: {{ wait_out.stdout | trim }}'
