- name: Show target Grafana instance
  debug:
    msg: Creating token '{{ token_name }}' on {{ grafana_api_url | regex_replace('/api/auth/keys','')
      }}
- name: Try deleting existing token with same name (ignore errors)
  uri:
    url: '{{ grafana_api_url }}'
    method: GET
    user: '{{ grafana_user }}'
    password: '{{ grafana_pass }}'
    force_basic_auth: true
    status_code: 200
    validate_certs: false
  register: existing_tokens
  failed_when: false
- name: Remove old token if it exists
  uri:
    url: '{{ grafana_api_url }}/{{ item.id }}'
    method: DELETE
    user: '{{ grafana_user }}'
    password: '{{ grafana_pass }}'
    force_basic_auth: true
    status_code:
    - 200
    - 404
    validate_certs: false
  loop: '{{ existing_tokens.json | default([]) | selectattr(''name'',''equalto'',token_name)
    | list }}'
  when: existing_tokens.json is defined
- name: Create new Grafana API token
  uri:
    url: '{{ grafana_api_url }}'
    method: POST
    user: '{{ grafana_user }}'
    password: '{{ grafana_pass }}'
    force_basic_auth: true
    body_format: json
    body:
      name: '{{ token_name }}'
      role: Admin
      secondsToLive: 0
    status_code: 200
    return_content: true
    validate_certs: false
  register: new_token
- name: Print the new token
  debug:
    msg: 'Grafana API token: {{ new_token.json.key }}'
